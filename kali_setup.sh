#!/bin/bash

set -e  

echo "Setting up Kali sources list..."
sudo tee /etc/apt/sources.list << EOF
deb http://http.kali.org/kali kali-rolling main contrib non-free non-free-firmware
EOF

echo "Resetting SSH keys..."
cd /etc/ssh/
if [ ! -d /etc/ssh/default_kali_keys ]; then
    sudo mkdir -p /etc/ssh/default_kali_keys
fi 
sudo mv ssh_host_* default_kali_keys/
sudo dpkg-reconfigure openssh-server


echo "Updating package list..."
sudo apt-get update


packages=(
    "apt-transport-https"
    "git"
    "sublist3r"
    "xclip"
    "python3-pip"
    "golang"
    "zaproxy"
    "python3-venv"
    "ufw"
)


for package in "${packages[@]}"; do
    echo "Installing $package..."
    sudo apt-get install -y "$package"
done


clone_configs() {
    echo "Cloning configuration files..."

    
    if [ -d ~/vimrc ]; then
        echo "Directory ~/vimrc already exists. Skipping clone."
    else
        git clone https://github.com/robertlackey/vimrc.git ~/vimrc
    fi

    
    if [ -f ~/vimrc/vimrc ]; then
        mv ~/vimrc/vimrc ~/.vimrc
        echo "Moved vimrc to ~/.vimrc"
    else
        echo "Warning: ~/vimrc/vimrc file does not exist."
    fi

    
    if [ -d ~/tmux ]; then
        echo "Directory ~/tmux already exists. Skipping clone."
    else
        git clone https://github.com/robertlackey/tmux.conf.git ~/tmux
    fi

    
    if [ -f ~/tmux/.tmux.conf ]; then
        mv ~/tmux/.tmux.conf ~/.tmux.conf
        echo "Moved .tmux.conf to ~/.tmux.conf"
    else
        echo "Warning: ~/tmux/.tmux.conf file does not exist."
    fi

    
    rm -rf ~/vimrc ~/tmux
}

clone_configs

echo "Installing Ruby gems..."
sudo gem install winrm -v '>=2.3.2'
sudo gem install winrm-fs -v '>=1.3.2'
sudo gem install stringio -v '>=0.0.2'

echo "Installing Python packages..."
python3 -m venv ~/venv
source ~/venv/bin/activate
pip3 install pyasn1 pyOpenSSL pycryptodomex ldapdomaindump flask ldap3 pyReadline
deactivate


version=$(curl -s https://api.github.com/repos/ffuf/ffuf/releases/latest | grep -Po '"tag_name": "\K.*?(?=")')
echo "Installing FFUF version $version..."
if [ ! -d /opt/ffuf ]; then
    sudo mkdir -p /opt/ffuf
fi
cd /opt
https://github.com/ffuf/ffuf/releases/download/v2.1.0/ffuf_2.1.0_linux_amd64.tar.gz
sudo wget "https://github.com/ffuf/ffuf/releases/download/${version}/ffuf_${version}_linux_amd64.tar.gz" 
sudo tar -xvzf ffuf_${version#v}_linux_amd64.tar.gz 
sudo rm ffuf_${version#v}_linux_amd64.tar.gz

echo "Installing SecLists..."
cd /usr/share/wordlists/
if [ ! -d /usr/share/wordlists/SecLists ]; then
    sudo git clone https://github.com/danielmiessler/SecLists.git
fi

echo "Cloning security tools..."
cd /opt/ 
repos=(
    "https://github.com/SecureAuthCorp/impacket.git"
    "https://github.com/Hackplayers/evil-winrm.git"
    "https://github.com/rebootuser/LinEnum.git"
    "https://github.com/411Hall/JAWS.git"
    "https://github.com/mzet-/linux-exploit-suggester.git"
    "https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite.git"
)

for repo in "${repos[@]}"; do
    repo_name=$(basename "$repo" .git)
    if [ -d "$repo_name" ]; then
        echo "Directory $repo_name already exists. Skipping clone."
    else
        echo "Cloning $repo..."
        sudo git clone "$repo"
    fi
done


echo "Installing Sublime Text..."
sudo wget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add -
echo "deb https://download.sublimetext.com/ apt/stable/" | sudo tee /etc/apt/sources.list.d/sublime-text.list
sudo apt-get update && sudo apt-get install -y sublime-text


echo "Installing Vundle..."
if [ -d "~/.vim/$USER/.vim/bundle/Vundle.vim" ]; then
    git clone https://github.com/gmarik/Vundle.vim.git ~/.vim/bundle/Vundle.vim
fi
echo "Installed Vundle. Open Vim and type :PluginInstall"


echo "Setting ownership for /opt..."
sudo chown -R $USER:$USER /opt

echo "Setup completed successfully!"
